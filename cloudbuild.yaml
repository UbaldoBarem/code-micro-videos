steps:

  - id: "Creating service-account-storage.json"
    name: 'gcr.io/cloud-builders/gcloud'
    args:
      - kms
      - decrypt
      - --ciphertext-file=./storage/credentials/google/service-account-storage.json.enc
      - --plaintext-file=./storage/credentials/google/service-account-storage.json
      - --location=global
      - --keyring=testing
      - --key=service-account

  - id: "Run docker-compose"
    name: 'gcr.io/$PROJECT_ID/docker-compose:1.24.0'
    args: ['-f','docker-compose.prod.yaml','up','-d']
    env:
      - GOOGLE_CLOUD_PROJECT_ID=$PROJECT_ID
      - GOOGLE_CLOUD_KEY_FILE=service-account-storage.json
      - GOOGLE_CLOUD_STORAGE_BUCKET=microflix
      - GOOGLE_CLOUD_STORAGE_API_URI=https://storage.cloud.google.com/microflix
      - TESTING_PROD=${TESTING_PROD}

  - id: "Run composer"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','app','composer','install']

  - id: "Copy .env"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','app','cp','.env.example','.env']

  - id: "Copy .env.testing"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','app','cp','.env.testing.example','.env.testing']

  - id: "Run key:generate"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','app','php','/var/www/artisan','key:generate']

  - id: "Run migrations"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','app','php','/var/www/artisan','migrate']

  - id: "Run PHPUnit"
    name: 'gcr.io/cloud-builders/docker'
    args: ['exec','-t','app','php','/var/www/vendor/bin/phpunit','/var/www/phpunit.xml']



